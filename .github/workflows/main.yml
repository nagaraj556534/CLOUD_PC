name: CI

on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Authenticate with Ngrok
      run: .\ngrok\ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Create User and Set Password
      run: |
        $SecurePassword = ConvertTo-SecureString -String "YourCompliantPassword" -AsPlainText -Force
        New-LocalUser -Name "YourUsername" -Password $SecurePassword -FullName "Your Full Name" -Description "Your Description" -AccountNeverExpires $true -UserMayNotChangePassword $false -PasswordNeverExpires $true
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "YourUsername"
      env:
        YourUsername: "NagarajM"  # Replace with your desired username
        YourCompliantPassword: "Password123"  # Replace with a compliant password
        
    - name: Create Ngrok tunnel
      run: |
        echo "authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}" > ngrok.yml
        echo "tunnels:" >> ngrok.yml
        echo "  remote_desktop:" >> ngrok.yml
        echo "    proto: tcp" >> ngrok.yml
        echo "    addr: 3389" >> ngrok.yml
        .\ngrok\ngrok start -config ngrok.yml remote_desktop

    # Add more steps as needed for your specific workflow
